# login to root live media
username: root
password: artix

## which drive u wanna install on
lsblk

## edit mirror lists
vi /etc/pacman.d/mirrorlist

## make sure all packages are available
pacman -S --needed dosfstools mtools ntfs-3g openssh openssh-runit
ln -s /etc/runit/sv/sshd/ /etc/runit/runsvdir/current

## create partitions
fdisk /dev/sdX (nvme0n1) # or cfdisk

## delete partitions
d

## create efi partition
p
## set to 1G

# create root partition
p
## size of full system, probably want it more than 30G, so like, maybe 60G

# create home partition
p
## make it rest of space

## write to drive
w

## make root and home partition ext4 (or btrfs if ur a gamer)
mkfs.ext4 /dev/sdX3 (nvme0n1p3)
mkfs.ext4 /dev/sdX2 (nvme0n1p2)

## make uefi partition fat part
mkfs.fat -F32 /sdX1 (nvme0n1p1)

## mount root part in /mnt
mount /dev/sdX2 /mnt (nvme0n1p2)

## make dir for home and boot
mkdir -p /mnt/home
mkdir -p /mnt/boot/EFI

## mount boot and home parts. into respective dirs
mount /dev/sdX1 /mnt/boot (nvme0n1p1)
mount /dev/sdX3 /mnt/home (nvme0n1p3)

######################################################################################################
################### DO NOT MOUNT DRIVE AT THIS STAGE IF REINSTALLING #################################
######################################################################################################

# for dual boot using windows efi, mount /dev/sdc2 /mnt/boot/EFI #
# and mount /dev/nvme0n1p4 /mnt/boot #

######################################################################################################
################### DO NOT MOUNT DRIVE AT THIS STAGE IF REINSTALLING #################################
######################################################################################################

## install base operating system
basestrap /mnt base base-devel runit elogind-runit linux linux-firmware neovim intel-ucode

## BOOTLOADER TIME
## generate fstab, partition to uuid
## remember to mount all drives u wanna mount first, then fstabgen
# for dual boot using windows efi, mount /dev/sdc2 /mnt/boot/EFI #
# and mount /dev/nvme0n1p4 /mnt/boot #
fstabgen -U /mnt >> /mnt/etc/fstab

# if reinstalling, unmount /mnt/home for now

## chroot into /mnt (duh)
artix-chroot /mnt

## bash cuz bash
bash

## symlink to set timezone
ln -sf /usr/share/zoneinfo/America/Detroit /etc/localtime

## set hwclock
hwclock --systohc

## locale gen
vim /etc/locale.gen
## uncomment ur locale (en_US)

## generate locale
locale-gen

## manually set locale
vim /etc/locale.conf

## ADD
LANG=en_US.UTF-8

## installing some epic packages
pacman -S dhcpcd dhcpcd-runit doas git wget libxft grub efibootmgr os-prober mtools dosfstools linux-headers ntfs-3g openssh openssh-runit 

## doas config
nvim /etc/doas.conf

## add this
permit persist :wheel

## starting services automatically runit
ln -s /etc/runit/sv/dhcpcd/ /etc/runit/runsvdir/current
ln -s /etc/runit/sv/sshd/ /etc/runit/runsvdir/current
## typically its done by "ln -s /etc/runit/SERVICE-NAME /run/runit/service

## HOST NAMESSSS
nvim /etc/hostname
## put something epic in here, like bruh

## host domain
nvim /etc/hosts

## put these for host domains
127.0.0.1   localhost
::1         localhost
127.0.1.1   Player01.localdomain Player01

## edit grub config
nvim /etc/default/grub

## set config
GRUB_DISABLE_OS_PROBER=false

## grub setup
grub-install --target=x86_84-efi --efi-directory=/boot --bootloader-id=GRUB

## generate grub config file
grub-mkconfig -o /boot/grub/grub.cfg

## set usr and passwd
passwd

useradd -m USERNAME
passwd USERNAME
usermod -aG wheel,audio,video,optical,storage USERNAME

## sudo setup
EDITOR=nvim visudo
## uncomment %wheel=ewiofojeej

## exit unmount
exit
umount /mnt/home && umount /mnt/boot && umount /mnt/boot/EFI

reboot

## arch mirrors
doas pacman -S artix-archlinux-support

nvim /etc/pacman.conf

## add these
#############################################################
[extra]
Include = /etc/pacman.d/mirrorlist-arch


#[community-testing]
#Include = /etc/pacman.d/mirrorlist-arch


[community]
Include = /etc/pacman.d/mirrorlist-arch


#[multilib-testing]
#Include = /etc/pacman.d/mirrorlist-arch


[multilib]
Include = /etc/pacman.d/mirrorlist-arch

# An example of a custom package repository.  See the pacman manpage for
# tips on creating your own repositories.
#[custom]
#SigLevel = Optional TrustAll
#Server = file:///home/custompkgs
[thepoon]
Server = https://archrepo.thepoon.fr
Server = https://mirrors.celianvdb.fr/archlinux/thepoon

#############################################################
## install amd drivers and xorg stuffs
sudo pacman -S xf86-video-amdgpu feh xorg xorg-xinit xorg-xinput xorg-fonts-100dpi xorg-fonts-75dpi xorg-server xorg-xset xorg-xrdb xorg-xrandr xorg-xsetroot alacritty playerctl $DRI

## install fonts
mkdir -p ~/.local/share/fonts
mkdir -p ~/.srcs
cp -r ~/dotfilesp/fonts/* ~/.local/share/fonts/
fc-cache -f

## installing paru
git clone https://aur.archlinux.org/paru.git ~/.srcs/paru
cd ~/.srcs/paru/ && makepkg -si

## install aur stuff
paru -S picom-jonaburg-git acpi wmctrl jq xclip maim

## config files
mkdir -p ~/.config/

cp -r ~/dotfilesp/.config/BLAHBLAHBLAH ~/.config
.
.
.

## dwm
git clone https://git.suckless.org/dwm

## configs for dwm
cp ~/dotfilesp/dwm/* ~/dwm/

## get dmenu
git clone https://git.suckless.org/dmenu

## zsh
sudo pacman -S zsh
zsh
## run through thingy

## change default shell to zsh
chsh $USER
/bin/zsh
